version: '3.8'

services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - redesd

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 50mb --maxmemory-policy allkeys-lfu
    networks:
      - redesd

  scraper:
    build:
      context: ./scraper
    container_name: scraper
    volumes:
      - ./scraper:/app
    command: ["tail", "-f", "/dev/null"]
    depends_on:
      - mongo
    networks:
      - redesd

  cache:
    build: ./cache
    container_name: cache
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - redis
    command: ["python", "cache.py"]
    networks:
      - redesd

  generador_trafico:
    build: ./generador_trafico
    container_name: generador_trafico
    depends_on:
      - cache
    command: ["python", "gdt.py"]
    networks:
      - redesd

  pig:
    build:
      context: ./docker-pig
    container_name: pig
    stdin_open: true
    tty: true
    volumes:
      - ./docker-pig:/app
    networks:
      - redesd

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - redesd

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - redesd

  indexador:
    build: ./elastic
    container_name: indexador
    volumes:
      - ./elastic:/app
      - ./docker-pig/salida:/data/pig_output  # monta la salida procesada de Pig
    depends_on:
      - elasticsearch
      - mongo
    command: ["python", "indexar.py"]
    networks:
      - redesd
  cache-worker:
    build:
      context: ./cache-worker
    container_name: cache-worker
    depends_on:
      - elasticsearch
      - redis
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_HOST=redis
      - UPDATE_INTERVAL=300  # 5 minutos
    networks:
      - redesd

networks:
  redesd:
    driver: bridge

volumes:
  mongodb_data:
  elasticsearch_data:
